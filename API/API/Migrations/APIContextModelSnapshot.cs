// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(APIContext))]
    partial class APIContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("API.Model.AdsContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bod")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email1")
                        .HasColumnType("text");

                    b.Property<string>("Email2")
                        .HasColumnType("text");

                    b.Property<string>("Ios")
                        .HasColumnType("text");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("SiglumId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SiglumId");

                    b.ToTable("AdsContact");
                });

            modelBuilder.Entity("API.Model.Catalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CatalogName")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("WuName")
                        .HasColumnType("text");

                    b.Property<string>("WuPrice")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Catalog");
                });

            modelBuilder.Entity("API.Model.DeliveryAcceptanceNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BoD")
                        .HasColumnType("text");

                    b.Property<bool?>("BodSigned")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DanGenerationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DanSerial")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Month")
                        .HasColumnType("integer");

                    b.Property<string>("PhtFocal")
                        .HasColumnType("text");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<int?>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("DeliveryAcceptanceNote");
                });

            modelBuilder.Entity("API.Model.DeliveryAcceptandeNoteLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DanId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Oqd")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderWUDistributionId")
                        .HasColumnType("integer");

                    b.Property<int?>("Otd")
                        .HasColumnType("integer");

                    b.Property<int?>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int?>("Rft")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DanId");

                    b.HasIndex("OrderWUDistributionId");

                    b.ToTable("DeliveryAcceptandeNoteLine");
                });

            modelBuilder.Entity("API.Model.KPIType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("KPIType");
                });

            modelBuilder.Entity("API.Model.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PoAirbus")
                        .HasColumnType("text");

                    b.Property<string>("PoAirbusTech")
                        .HasColumnType("text");

                    b.Property<string>("PoPhtSubc")
                        .HasColumnType("text");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("API.Model.OrderWU_KPI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("April")
                        .HasColumnType("integer");

                    b.Property<int?>("August")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("December")
                        .HasColumnType("integer");

                    b.Property<int?>("February")
                        .HasColumnType("integer");

                    b.Property<int?>("January")
                        .HasColumnType("integer");

                    b.Property<int?>("July")
                        .HasColumnType("integer");

                    b.Property<int?>("June")
                        .HasColumnType("integer");

                    b.Property<int?>("KPITypeId")
                        .HasColumnType("integer");

                    b.Property<int?>("March")
                        .HasColumnType("integer");

                    b.Property<int?>("May")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("November")
                        .HasColumnType("integer");

                    b.Property<int?>("October")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderWUDistributionId")
                        .HasColumnType("integer");

                    b.Property<int?>("September")
                        .HasColumnType("integer");

                    b.Property<int?>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("KPITypeId");

                    b.HasIndex("OrderWUDistributionId");

                    b.ToTable("Order_WU_KPI");
                });

            modelBuilder.Entity("API.Model.OrderWUDistribution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("April")
                        .HasColumnType("integer");

                    b.Property<int?>("AprilStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("August")
                        .HasColumnType("integer");

                    b.Property<int?>("AugustStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("December")
                        .HasColumnType("integer");

                    b.Property<int?>("DecemberStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("February")
                        .HasColumnType("integer");

                    b.Property<int?>("FebruaryStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("January")
                        .HasColumnType("integer");

                    b.Property<int?>("JanuaryStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("July")
                        .HasColumnType("integer");

                    b.Property<int?>("JulyStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("June")
                        .HasColumnType("integer");

                    b.Property<int?>("JuneStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("March")
                        .HasColumnType("integer");

                    b.Property<int?>("MarchStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("May")
                        .HasColumnType("integer");

                    b.Property<int?>("MayStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("November")
                        .HasColumnType("integer");

                    b.Property<int?>("NovemberStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("October")
                        .HasColumnType("integer");

                    b.Property<int?>("OctoberStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderId")
                        .HasColumnType("integer");

                    b.Property<int?>("Position")
                        .HasColumnType("integer");

                    b.Property<int?>("September")
                        .HasColumnType("integer");

                    b.Property<int?>("SeptemberStatus")
                        .HasColumnType("integer");

                    b.Property<string>("WUName")
                        .HasColumnType("text");

                    b.Property<int?>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderWUDistribution");
                });

            modelBuilder.Entity("API.Model.OrderWUForecast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("April")
                        .HasColumnType("integer");

                    b.Property<int?>("August")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("December")
                        .HasColumnType("integer");

                    b.Property<int?>("February")
                        .HasColumnType("integer");

                    b.Property<int?>("January")
                        .HasColumnType("integer");

                    b.Property<int?>("July")
                        .HasColumnType("integer");

                    b.Property<int?>("June")
                        .HasColumnType("integer");

                    b.Property<int?>("March")
                        .HasColumnType("integer");

                    b.Property<int?>("May")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("November")
                        .HasColumnType("integer");

                    b.Property<int?>("October")
                        .HasColumnType("integer");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<int?>("September")
                        .HasColumnType("integer");

                    b.Property<int?>("WUName")
                        .HasColumnType("integer");

                    b.Property<int?>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("OrderWUForecast");
                });

            modelBuilder.Entity("API.Model.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("ACME")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ProjectNumber")
                        .HasColumnType("text");

                    b.Property<string>("RiskPlan")
                        .HasColumnType("text");

                    b.Property<string>("Service")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("API.Model.ProjectSubcontrator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactEmail")
                        .HasColumnType("text");

                    b.Property<string>("ContactName")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ProjectSubcontrator");
                });

            modelBuilder.Entity("API.Model.Siglum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Siglum");
                });

            modelBuilder.Entity("API.Model.AdsContact", b =>
                {
                    b.HasOne("API.Model.Siglum", "Siglum")
                        .WithMany()
                        .HasForeignKey("SiglumId");

                    b.Navigation("Siglum");
                });

            modelBuilder.Entity("API.Model.DeliveryAcceptanceNote", b =>
                {
                    b.HasOne("API.Model.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("API.Model.DeliveryAcceptandeNoteLine", b =>
                {
                    b.HasOne("API.Model.DeliveryAcceptanceNote", "Dan")
                        .WithMany()
                        .HasForeignKey("DanId");

                    b.HasOne("API.Model.OrderWUDistribution", "OrderWUDistribution")
                        .WithMany()
                        .HasForeignKey("OrderWUDistributionId");

                    b.Navigation("Dan");

                    b.Navigation("OrderWUDistribution");
                });

            modelBuilder.Entity("API.Model.Order", b =>
                {
                    b.HasOne("API.Model.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("API.Model.OrderWU_KPI", b =>
                {
                    b.HasOne("API.Model.KPIType", "KPIType")
                        .WithMany()
                        .HasForeignKey("KPITypeId");

                    b.HasOne("API.Model.OrderWUDistribution", "OrderWUDistribution")
                        .WithMany()
                        .HasForeignKey("OrderWUDistributionId");

                    b.Navigation("KPIType");

                    b.Navigation("OrderWUDistribution");
                });

            modelBuilder.Entity("API.Model.OrderWUDistribution", b =>
                {
                    b.HasOne("API.Model.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("API.Model.OrderWUForecast", b =>
                {
                    b.HasOne("API.Model.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.Navigation("Project");
                });
#pragma warning restore 612, 618
        }
    }
}

{"ast":null,"code":"import { MatSidenav } from '@angular/material/sidenav';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/material/toolbar\";\nimport * as i3 from \"@angular/material/icon\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/sidenav\";\nfunction AppComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const e_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(e_r1);\n  }\n}\nexport class AppComponent {\n  constructor() {\n    this.events = [];\n    this.opened = true;\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    viewQuery: function AppComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatSidenav, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sidenav = _t.first);\n      }\n    },\n    decls: 13,\n    vars: 2,\n    consts: [[\"color\", \"primary\"], [\"mat-icon-button\", \"\", 3, \"click\"], [\"mode\", \"side\", 3, \"opened\", \"openedChange\", \"closed\"], [1, \"example-events\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_1_listener() {\n          return ctx.sidenav.toggle();\n        });\n        i0.ɵɵelementStart(2, \"mat-icon\");\n        i0.ɵɵtext(3, \"menu\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtext(4, \" Toolbar Title\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-sidenav-container\")(6, \"mat-sidenav\", 2);\n        i0.ɵɵlistener(\"openedChange\", function AppComponent_Template_mat_sidenav_openedChange_6_listener($event) {\n          return ctx.opened = $event;\n        })(\"opened\", function AppComponent_Template_mat_sidenav_opened_6_listener() {\n          return ctx.events.push(\"open!\");\n        })(\"closed\", function AppComponent_Template_mat_sidenav_closed_6_listener() {\n          return ctx.events.push(\"close!\");\n        });\n        i0.ɵɵtext(7, \" Sidenav content \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"mat-sidenav-content\")(9, \"p\");\n        i0.ɵɵtext(10, \"Events:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 3);\n        i0.ɵɵtemplate(12, AppComponent_div_12_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"opened\", ctx.opened);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.events);\n      }\n    },\n    dependencies: [i1.NgForOf, i2.MatToolbar, i3.MatIcon, i4.MatIconButton, i5.MatSidenav, i5.MatSidenavContainer, i5.MatSidenavContent],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AAEA,SAASA,UAAU,QAAQ,2BAA2B;;;;;;;;;ICchDC,2BAA8B;IAAAA,YAAK;IAAAA,iBAAM;;;;IAAXA,eAAK;IAALA,0BAAK;;;ADPzC,OAAM,MAAOC,YAAY;EALzBC;IAOE,WAAM,GAAa,EAAE;IACrB,WAAM,GAAY,IAAI;;EAEvB;qBALYD,YAAY;EAAA;EAAA;UAAZA,YAAY;IAAAE;IAAAC;MAAA;uBACZL,UAAU;;;;;;;;;;;;QCVvBC,sCAA6B;QACHA;UAAA,OAASK,oBAAgB;QAAA,EAAC;QAChDL,gCAAU;QAAAA,oBAAI;QAAAA,iBAAW;QAE3BA,gCACF;QAAAA,iBAAc;QAEdA,6CAAwB;QACGA;UAAA;QAAA,EAAmB;UAAA,OAAWK,gBAAY,OAAO,CAAC;QAAA,EAA/B;UAAA,OACrBA,gBAAY,QAAQ,CAAC;QAAA,EADA;QAE1CL,iCACF;QAAAA,iBAAc;QAEdA,2CAAqB;QAChBA,wBAAO;QAAAA,iBAAI;QACdA,+BAA4B;QAC1BA,+DAAyC;QAC3CA,iBAAM;;;QATiBA,eAAmB;QAAnBA,mCAAmB;QAQrBA,eAAS;QAATA,oCAAS","names":["MatSidenav","i0","AppComponent","constructor","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Code\\PhTrackWeb\\PhTrack\\src\\app\\app.component.ts","C:\\Code\\PhTrackWeb\\PhTrack\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ViewChild} from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  @ViewChild(MatSidenav) sidenav: MatSidenav;\n  events: string[] = [];\n  opened: boolean = true;\n  \n}\n","<mat-toolbar color=\"primary\">\n  <button mat-icon-button (click)=\"sidenav.toggle()\">\n    <mat-icon>menu</mat-icon>\n  </button>\n  Toolbar Title\n</mat-toolbar>\n\n<mat-sidenav-container >\n  <mat-sidenav mode=\"side\" [(opened)]=\"opened\" (opened)=\"events.push('open!')\"\n               (closed)=\"events.push('close!')\">\n    Sidenav content\n  </mat-sidenav>\n\n  <mat-sidenav-content>\n    <p>Events:</p>\n    <div class=\"example-events\">\n      <div *ngFor=\"let e of events\">{{e}}</div>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}